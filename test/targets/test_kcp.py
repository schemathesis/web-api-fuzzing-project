import re

import pytest
import yaml

from wafp.targets.catalog.kubernetes_kcp import extract_user_token

TEST_USERNAME = "kcp-admin"
TEST_TOKEN = "07652257-bcbd-4ae9-b863-c9c7440a20c6"
TEST_KUBECONFIG = f"""apiVersion: v1
clusters:
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRc0ZBREFqTVNFd0h3WURWUVFEREJneE56SXUKTWprdU1DNHlMV05oUURFMk5UZzJNREEyTnpVd0hoY05Nakl3TnpJek1UY3lORE0xV2hjTk1qTXdOekl6TVRjeQpORE0xV2pBZ01SNHdIQVlEVlFRRERCVXhOekl1TWprdU1DNHlRREUyTlRnMk1EQTJOelV3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNpMU9oMm44R1JreU13dkhlUnh1R2FvS3g5NUpreGJPckcKMFdrMGtReG84MTV3MjBUTWEwZW5ycGRGeGdVWmxKRTlYOHRnbk8xeWROU2NESlZqSmRkblc2MThFSnIyNm9IUwo2RHo4VzI1VUZhZFNnb05vL1E3TTgxbWg3RWJXdjJoUXd6WUZDSkM5MCtaTW9sMWNhMlo3REJSMXpVcnNRQkVDCnNoRUpieTBERmdWdzVUWmt1a1BhUlZocFM1MGpGMWF5Q0NzSS9ia3czQnBCNmRpR3JzamZWVWk1TVNGMTZlbkoKWCtvRWhuWWpUaGZDR042eVQrU05qOVBETnFtZEFQZE5ZWnJYYXB4bmlHYjlNUlZXc2ZVaHhmVW9MRWQ1MGgwUwo3WVMvNmlZVXpCKzZUMDBSSjVUS2xRVUgyZUtLaU1zWk9CWkFEK0dPUkhMLzlDS2JEOVVCQWdNQkFBR2pjakJ3Ck1BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQkFmOEUKQWpBQU1COEdBMVVkSXdRWU1CYUFGTXgrcVVqSUZIV1BueVZhMk5GSXl1RDJpWTVzTUJvR0ExVWRFUVFUTUJHQwpDV3h2WTJGc2FHOXpkSWNFckIwQUFqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFPR0s5ODVxTUl2Z045Zm1PCmRZZzVEalVyUm5NdFAwMjM5WWxDck9yb04vOTNMeTg4d25JRldPRWVGNVZRWXRuRXNrU0EwN3dGL1RRN3p0M1EKemg5YjRmclBsNms2Vzhua0NUNllhaG9GYTA3TGorQ2JEcXYvMzRDejNENVo0R3lJTGt2WlgwcmxoVUpHNS9aUgppS3BYYzU2L2M2cUMxSHdybVFLb3NNYnJEbmlCK2h1dlZVSm9YSUIyTk5VdmhENVQxTjMwQVYweW9IRVFPTmYzCmJzdmFEa2U0Tkg3SEM3V1A4dW5yc2RTL0J2Z1BQU2pVdDNJbGIwRkZUZEhET0VpcDBCZ1dlS0s1NURSMEd6UzMKWUlESEhjQjZyRjcwQ2RXeW9BSmEzcExlbGF4UHlLRE1rOXQ2QWtmT0RvTGk2NVllUWRlem9CSy94NHhLWkl6UwpvRU1ITHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEQXpDQ0FldWdBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBak1TRXdId1lEVlFRRERCZ3hOekl1Ck1qa3VNQzR5TFdOaFFERTJOVGcyTURBMk56VXdIaGNOTWpJd056SXpNVGN5TkRNMVdoY05Nak13TnpJek1UY3kKTkRNMVdqQWpNU0V3SHdZRFZRUUREQmd4TnpJdU1qa3VNQzR5TFdOaFFERTJOVGcyTURBMk56VXdnZ0VpTUEwRwpDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3NPZ2EwVVhQNWpOaklvNEsxR20xNDNaUUxrSzdpClEyeHpFK3dvOXA2dk1uNXFubHhvQXlta0xMSU10V2lqK2FMSjVEU3pkRyswdzZLaUxrRjNaNFp6NlFlaXlxZVQKSmdlVk1FNjVWM0ZkMzZYSmh4UVorY0JaOVpyZGVWcVFRaldsV1dsU2xHSTNtZnhZTUxkVm5zcm9oeXZoMWJkNQp6TGlQU2I4VU1EY0czU0ZQb1pocGtUMmpNSlBqRFBQaWJTeGUyWm1UWVQwaXpIZkx6bFNheDVqb1R2V2NUWU5kCno3SEJwQktuUWJVYlhTd1dXOW12OWd4MFRQNndVVFd0VWprdzZxeElpMVdNY3RVY3RoQkZNYUZTWm9vUi9SamYKSG8raTZaUW5JQ1VhQ3dsZDVzbTIyTEdkYi94d0dEbDlONUc2MFBLN2o5OGpvUVhrUUZTd0NSRjdBZ01CQUFHagpRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRNCmZxbEl5QlIxajU4bFd0alJTTXJnOW9tT2JEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFqMTROeHFpSk90bEoKL1VBcE9JdHY0aklKeWRUbGRNSDhINEg2aWozV2s3K3JUZW9RdXJQKzlWSFBMWnJGOXlHbGx0VkcwUWk1SHpjcQpjcjZUWHovd3FjREg1L283L3gyTUUrTGlKU281VVZkM3hKL3Nlb2NidXB6bEZoMkkzYkQ0QWd4ajZtaDdXSXJXCnE2cVpiZHhCT2ZzK0hMM3BzOUwrSkpScGxaNU56S0crVnZPOGQ2ZkhSNFhqS2JZV1lZbElGTklKSHliaDZiMXYKajVVdDJjbHVUSERNYWZkemUrYmJHSDl6R1pnYVQ4OXV5SERwS3FBOUc0TWdJS1cxNG03MzRXRWR5SXNjNHZYRgpiNGVhMUZDSTdkc3gwcFZQWENaMFNaVzFQK1JiMHIvdDBwN0RIWFl0eHZtRGpuVlpqdEFoRksvYXdFVmNuUzY4CnQ1UVk5VDlkVWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    server: https://172.29.0.2:6443
  name: base
- cluster:
    certificate-authority-data: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURNRENDQWhpZ0F3SUJBZ0lCQWpBTkJna3Foa2lHOXcwQkFRc0ZBREFqTVNFd0h3WURWUVFEREJneE56SXUKTWprdU1DNHlMV05oUURFMk5UZzJNREEyTnpVd0hoY05Nakl3TnpJek1UY3lORE0xV2hjTk1qTXdOekl6TVRjeQpORE0xV2pBZ01SNHdIQVlEVlFRRERCVXhOekl1TWprdU1DNHlRREUyTlRnMk1EQTJOelV3Z2dFaU1BMEdDU3FHClNJYjNEUUVCQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUUNpMU9oMm44R1JreU13dkhlUnh1R2FvS3g5NUpreGJPckcKMFdrMGtReG84MTV3MjBUTWEwZW5ycGRGeGdVWmxKRTlYOHRnbk8xeWROU2NESlZqSmRkblc2MThFSnIyNm9IUwo2RHo4VzI1VUZhZFNnb05vL1E3TTgxbWg3RWJXdjJoUXd6WUZDSkM5MCtaTW9sMWNhMlo3REJSMXpVcnNRQkVDCnNoRUpieTBERmdWdzVUWmt1a1BhUlZocFM1MGpGMWF5Q0NzSS9ia3czQnBCNmRpR3JzamZWVWk1TVNGMTZlbkoKWCtvRWhuWWpUaGZDR042eVQrU05qOVBETnFtZEFQZE5ZWnJYYXB4bmlHYjlNUlZXc2ZVaHhmVW9MRWQ1MGgwUwo3WVMvNmlZVXpCKzZUMDBSSjVUS2xRVUgyZUtLaU1zWk9CWkFEK0dPUkhMLzlDS2JEOVVCQWdNQkFBR2pjakJ3Ck1BNEdBMVVkRHdFQi93UUVBd0lGb0RBVEJnTlZIU1VFRERBS0JnZ3JCZ0VGQlFjREFUQU1CZ05WSFJNQkFmOEUKQWpBQU1COEdBMVVkSXdRWU1CYUFGTXgrcVVqSUZIV1BueVZhMk5GSXl1RDJpWTVzTUJvR0ExVWRFUVFUTUJHQwpDV3h2WTJGc2FHOXpkSWNFckIwQUFqQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFPR0s5ODVxTUl2Z045Zm1PCmRZZzVEalVyUm5NdFAwMjM5WWxDck9yb04vOTNMeTg4d25JRldPRWVGNVZRWXRuRXNrU0EwN3dGL1RRN3p0M1EKemg5YjRmclBsNms2Vzhua0NUNllhaG9GYTA3TGorQ2JEcXYvMzRDejNENVo0R3lJTGt2WlgwcmxoVUpHNS9aUgppS3BYYzU2L2M2cUMxSHdybVFLb3NNYnJEbmlCK2h1dlZVSm9YSUIyTk5VdmhENVQxTjMwQVYweW9IRVFPTmYzCmJzdmFEa2U0Tkg3SEM3V1A4dW5yc2RTL0J2Z1BQU2pVdDNJbGIwRkZUZEhET0VpcDBCZ1dlS0s1NURSMEd6UzMKWUlESEhjQjZyRjcwQ2RXeW9BSmEzcExlbGF4UHlLRE1rOXQ2QWtmT0RvTGk2NVllUWRlem9CSy94NHhLWkl6UwpvRU1ITHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCi0tLS0tQkVHSU4gQ0VSVElGSUNBVEUtLS0tLQpNSUlEQXpDQ0FldWdBd0lCQWdJQkFUQU5CZ2txaGtpRzl3MEJBUXNGQURBak1TRXdId1lEVlFRRERCZ3hOekl1Ck1qa3VNQzR5TFdOaFFERTJOVGcyTURBMk56VXdIaGNOTWpJd056SXpNVGN5TkRNMVdoY05Nak13TnpJek1UY3kKTkRNMVdqQWpNU0V3SHdZRFZRUUREQmd4TnpJdU1qa3VNQzR5TFdOaFFERTJOVGcyTURBMk56VXdnZ0VpTUEwRwpDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQ3NPZ2EwVVhQNWpOaklvNEsxR20xNDNaUUxrSzdpClEyeHpFK3dvOXA2dk1uNXFubHhvQXlta0xMSU10V2lqK2FMSjVEU3pkRyswdzZLaUxrRjNaNFp6NlFlaXlxZVQKSmdlVk1FNjVWM0ZkMzZYSmh4UVorY0JaOVpyZGVWcVFRaldsV1dsU2xHSTNtZnhZTUxkVm5zcm9oeXZoMWJkNQp6TGlQU2I4VU1EY0czU0ZQb1pocGtUMmpNSlBqRFBQaWJTeGUyWm1UWVQwaXpIZkx6bFNheDVqb1R2V2NUWU5kCno3SEJwQktuUWJVYlhTd1dXOW12OWd4MFRQNndVVFd0VWprdzZxeElpMVdNY3RVY3RoQkZNYUZTWm9vUi9SamYKSG8raTZaUW5JQ1VhQ3dsZDVzbTIyTEdkYi94d0dEbDlONUc2MFBLN2o5OGpvUVhrUUZTd0NSRjdBZ01CQUFHagpRakJBTUE0R0ExVWREd0VCL3dRRUF3SUNwREFQQmdOVkhSTUJBZjhFQlRBREFRSC9NQjBHQTFVZERnUVdCQlRNCmZxbEl5QlIxajU4bFd0alJTTXJnOW9tT2JEQU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFqMTROeHFpSk90bEoKL1VBcE9JdHY0aklKeWRUbGRNSDhINEg2aWozV2s3K3JUZW9RdXJQKzlWSFBMWnJGOXlHbGx0VkcwUWk1SHpjcQpjcjZUWHovd3FjREg1L283L3gyTUUrTGlKU281VVZkM3hKL3Nlb2NidXB6bEZoMkkzYkQ0QWd4ajZtaDdXSXJXCnE2cVpiZHhCT2ZzK0hMM3BzOUwrSkpScGxaNU56S0crVnZPOGQ2ZkhSNFhqS2JZV1lZbElGTklKSHliaDZiMXYKajVVdDJjbHVUSERNYWZkemUrYmJHSDl6R1pnYVQ4OXV5SERwS3FBOUc0TWdJS1cxNG03MzRXRWR5SXNjNHZYRgpiNGVhMUZDSTdkc3gwcFZQWENaMFNaVzFQK1JiMHIvdDBwN0RIWFl0eHZtRGpuVlpqdEFoRksvYXdFVmNuUzY4CnQ1UVk5VDlkVWc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
    server: https://172.29.0.2:6443/clusters/root
  name: root
contexts:
- context:
    cluster: base
    user: kcp-admin
  name: base
- context:
    cluster: root
    user: kcp-admin
  name: root
- context:
    cluster: base
    user: shard-admin
  name: system:admin
current-context: root
kind: Config
preferences: {{}}
users:
- name: {TEST_USERNAME}
  user:
    token: {TEST_TOKEN}
- name: shard-admin
  user:
    token: fdb6fa9a-7791-427f-bd0e-49da08011aa2
"""


@pytest.mark.parametrize("data, expected", ((TEST_KUBECONFIG, TEST_TOKEN), ("{}", None)))
def test_extract_user_token(data, expected):
    kubeconfig = yaml.safe_load(data)
    assert extract_user_token(kubeconfig, TEST_USERNAME) == expected


def test_invalid_kubeconfig_data():
    with pytest.raises(ValueError, match=re.escape("Invalid `admin.kubeconfig` content: []")):
        extract_user_token([])
